import os
import json
import time
from datetime import datetime, timedelta
from threading import Thread
from flask import Flask, jsonify, request
from flask_cors import CORS
from pytrends.request import TrendReq

app = Flask(__name__)
CORS(app)

cached_trends = []
last_update = None
update_interval = 30 * 24 * 60 * 60

BUSINESS_KEYWORDS = [
    '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', '‡∏•‡∏á‡∏ó‡∏∏‡∏ô', '‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå', '‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå',
    '‡πÅ‡∏ü‡∏£‡∏ô‡πÑ‡∏ä‡∏™‡πå', '‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏≠‡∏±‡∏û', '‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á', '‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
    '‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà', '‡πÄ‡∏ö‡πÄ‡∏Å‡∏≠‡∏£‡∏µ‡πà', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°', '‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô', '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå'
]

BUSINESS_FILTER_KEYWORDS_SET = set(k.lower() for k in [
    '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', '‡∏£‡πâ‡∏≤‡∏ô', '‡∏Ç‡∏≤‡∏¢', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', '‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà', '‡∏Å‡∏≤‡πÅ‡∏ü', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
    '‡πÄ‡∏ö‡πÄ‡∏Å‡∏≠‡∏£‡∏µ‡πà', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°', '‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô', '‡∏Ñ‡∏≠‡∏£‡πå‡∏™', '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå', '‡πÅ‡∏ü‡∏£‡∏ô‡πÑ‡∏ä‡∏™‡πå',
    '‡∏•‡∏á‡∏ó‡∏∏‡∏ô', '‡πÄ‡∏õ‡∏¥‡∏î', '‡∏ó‡∏≥', '‡∏™‡∏£‡πâ‡∏≤‡∏á', '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô', '‡∏Ç‡∏¢‡∏≤‡∏¢', '‡∏û‡∏±‡∏í‡∏ô‡∏≤',
    '‡∏ï‡∏•‡∏≤‡∏î', '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', '‡∏ú‡∏•‡∏¥‡∏ï', '‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢', '‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£', '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ'
])

EXCLUDED_KEYWORDS_SET = set(k.lower() for k in [
    '‡∏Ç‡πà‡∏≤‡∏ß', '‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á', '‡∏Å‡∏µ‡∏¨‡∏≤', '‡∏î‡∏≤‡∏£‡∏≤', '‡∏ã‡∏µ‡∏£‡∏µ‡πà‡∏¢‡πå', '‡∏´‡∏ô‡∏±‡∏á',
    '‡πÄ‡∏Å‡∏°', '‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏∞', '‡∏°‡∏¥‡∏ß‡∏™‡∏¥‡∏Ñ', '‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û',
    '‡πÇ‡∏£‡∏Ñ‡∏£‡∏∞‡∏ö‡∏≤‡∏î', '‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°', '‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏'
])

def is_business_related(query):
    query_lower = query.lower()
    if any(excluded in query_lower for excluded in EXCLUDED_KEYWORDS_SET):
        return False
    return any(keyword in query_lower for keyword in BUSINESS_FILTER_KEYWORDS_SET)

def clean_and_filter_trends(trends_data):
    cleaned_trends = {
        trend.strip().title()
        for trend in trends_data
        if is_business_related(trend.strip()) and len(trend.strip()) > 3
    }
    return list(cleaned_trends)

def fetch_trending_data():
    try:
        print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡πÉ‡∏´‡∏°‡πà...")
        pytrends = TrendReq(hl='th-TH', tz=360)
        all_trends = set()

        for i in range(0, len(BUSINESS_KEYWORDS), 3):
            batch = BUSINESS_KEYWORDS[i:i+3]
            time.sleep(2)
            try:
                pytrends.build_payload(batch, geo='TH', timeframe='now 7-d')
                related = pytrends.related_queries()
                for keyword in batch:
                    if keyword in related:
                        if related[keyword].get('top') is not None:
                            all_trends.update(related[keyword]['top']['query'][:8])
                        if related[keyword].get('rising') is not None:
                            all_trends.update(related[keyword]['rising']['query'][:5])
            except Exception as e:
                print(f"‚ö†Ô∏è Error batch {batch}: {e}")
                continue

        filtered_trends = clean_and_filter_trends(all_trends)
        print(f"‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡πÑ‡∏î‡πâ {len(filtered_trends[:15])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        return filtered_trends[:15]
    except Exception as e:
        print(f"‚ùå Error fetching trends: {e}")
        return []

def get_fallback_trends():
    return [
        "‡πÅ‡∏ü‡∏£‡∏ô‡πÑ‡∏ä‡∏™‡πå‡∏Å‡∏≤‡πÅ‡∏ü‡∏™‡∏î", "‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", "‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå", "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ö‡πÄ‡∏Å‡∏≠‡∏£‡∏µ‡πà", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏≠‡∏≤‡∏á‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡∏µ‡πà", "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô", "‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", "‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô TikTok"
    ]

# Additional functions omitted for brevity, assumed to remain unchanged from original
